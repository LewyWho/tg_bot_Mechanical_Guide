import sqlite3

conn = sqlite3.connect('database.db')
cursor = conn.cursor()


def message_start():
    return """–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Telegram –±–æ—Ç-–∞–≥—Ä–µ–≥–∞—Ç–æ—Ä –∑–Ω–∞–Ω–∏–π –æ –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö –º–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞! ü§ñüè≠
    
–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ —Ä–∞–±–æ—Ç–µ –Ω–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è—Ö –º–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–µ–Ω–∏—è. 

–ù–∞—à –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –±—ã—Å—Ç—Ä–æ –Ω–∞—Ö–æ–¥–∏—Ç—å –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞ –ª—É—á—à–∏–µ –∑–∞–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã, –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–µ–º—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ."""


def register_start():
    return """–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è."""


def need_notification_or_not():
    return """–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–∞—Ö –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã?"""


def need_notification_yes():
    return """–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–∞—Ö –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã."""


def need_notification_no():
    return """–¢–µ–ø–µ—Ä—å –≤—ã –Ω–µ –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–∞—Ö –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã."""


def get_user_questions_count(user_id):
    cursor.execute("SELECT COUNT(*) FROM KnowledgeRequests WHERE author_id=?", (user_id,))
    count = cursor.fetchone()[0]
    return count


def get_user_role(user_id):
    cursor.execute("SELECT role FROM Users WHERE id=?", (user_id,))
    role = cursor.fetchone()[0]
    return role


def get_user_votes(user_id):
    cursor.execute("SELECT vote_type, COUNT(*) FROM Votes WHERE user_id=? GROUP BY vote_type", (user_id,))
    votes = cursor.fetchall()
    num_votes_for = num_votes_against = 0
    for vote_type, count in votes:
        if vote_type == "–ó–∞":
            num_votes_for = count
        elif vote_type == "–ü—Ä–æ—Ç–∏–≤":
            num_votes_against = count
    return num_votes_for, num_votes_against


def get_user_responses_count(user_id):
    cursor.execute("SELECT COUNT(*) FROM KnowledgeResponses WHERE author_id=?", (user_id,))
    count = cursor.fetchone()[0]
    return count


def profile_user(user_id):
    num_questions = get_user_questions_count(user_id)
    num_responses = get_user_responses_count(user_id)
    num_votes_for = cursor.execute("SELECT COUNT(votes) FROM KnowledgeRequests WHERE author_id=? AND votes ='1'", (user_id,)).fetchone()[0]
    num_votes_against = cursor.execute("SELECT COUNT(votes) FROM KnowledgeResponses WHERE author_id=? AND votes ='1'", (user_id,)).fetchone()[0]
    role = get_user_role(user_id)
    role_str = "–°–æ—Ç—Ä—É–¥–Ω–∏–∫" if role == 0 else "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
    return f"""–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
–í–∞—à ID: {user_id}
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤: {num_questions}
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤: {num_responses}
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–æ—Å–æ–≤ –¥–ª—è –≤–∞—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤: {num_votes_for}
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–æ—Å–æ–≤ –¥–ª—è –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤: {num_votes_against}
–í–∞—à–∞ —Ä–æ–ª—å: {role_str}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ"""


def get_tag(tag):
    return f"""–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–≥: {tag}\n\n–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?"""
